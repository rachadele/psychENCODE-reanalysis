# use dplyr::filter() to get the expression data for the gene
expressionDataForGene <- toLonger(exprs(eset)) %>%
filter(gene %in% geneIds)
expressionDataForGene <- expressionDataForGene %>%
left_join(pData(eset) %>% select(sample_id, dev_stage, genotype),
by = "sample_id")
expressionDataForGene
toLongerMeta <- function(expset) {
stopifnot(class(expset) == "ExpressionSet")
expressionMatrix <- longExpressionMatrix <- exprs(expset) %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
pivot_longer(cols = !gene,
values_to = "Expression",
names_to = "sample_id") %>%
left_join(pData(expset) %>% select(sample_id, dev_stage, genotype),
by = "sample_id")
return(expressionMatrix)
}
toLongerMeta(eset)
expressionDataForGene %>%
ggplot(aes(x = Expression, y = genotype, color = genotype)) +
geom_point(size = 3, shape = 1) +
facet_wrap(~gene)
boringGene <- expressionDataForGene %>% filter(gene == "1416119_at")
t.test(Expression ~ genotype, boringGene)
interestingGene <- expressionDataForGene %>% filter(gene == "1431708_a_at")
t.test(Expression ~ genotype, interestingGene)
boringGene <- toLongerMeta(eset) %>% filter(gene == "1416119_at")
summary(lm(Expression ~ genotype, boringGene))
interestingGene <-  toLongerMeta(eset) %>% filter(gene == "1431708_a_at")
summary(lm(Expression ~ genotype, interestingGene))
interestingGene <- toLongerMeta(eset) %>% filter(gene == "1431708_a_at")
summary(aov(Expression ~ dev_stage, interestingGene))
interestingGene <- toLongerMeta(eset) %>% filter(gene == "1431708_a_at")
summary(lm(Expression ~ dev_stage, interestingGene))
set.seed(124)
numberOfGenes <- 1000
numberOfSamples <- 3
# each row is a gene, each column is a sample
simulatedGeneExpressionMatrix <- matrix(rnorm(numberOfGenes * numberOfSamples), nrow = numberOfGenes)
simulatedGeneExpressionMatrix %>% head()
geneVars <- simulatedGeneExpressionMatrix %>% apply(1, var) # work out the variance for each gene
tibble(variance = geneVars) %>%
ggplot(aes(x = variance)) +
geom_density() +
geom_point(aes(y = 0), shape = 1, size = 3)
# get tidy (long) table containing expression + metadata of wild type samples (useful for plotting later on)
wildType_long <- toLongerMeta(eset) %>%
filter(genotype == "WT")
# pull out just metadata for wildtype samples
wildTypeMetadata <- pData(eset) %>%
filter(genotype == "WT") %>%
select(sample_id, genotype, dev_stage)
# pull out just expression data for wildtype samples
# makes use of the fact that the eset has column (sample) names
wildTypeExpressionMatrix <- exprs(eset[, wildTypeMetadata$sample_id])
# Ordering of samples in the samples metadata
wildTypeMetadata$sample_id
# Ordering of samples in the expression matrix
colnames(wildTypeExpressionMatrix)
# check equivalence
identical(wildTypeMetadata$sample_id, colnames(wildTypeExpressionMatrix))
designMatrix <- model.matrix(~dev_stage, wildTypeMetadata)
head(designMatrix, 10) %>% kable()
head(wildTypeMetadata, 10) %>% kable()
# keep the fit around as we will need to it for looking at other contrasts later
wildTypeDevStageFit <- lmFit(wildTypeExpressionMatrix, designMatrix)
# run ebayes to calculate moderated t-statistics
wildTypeDevStageFitEb <- eBayes(wildTypeDevStageFit)
wildTypeDevStageFit_eset <- lmFit(eset[,wildTypeMetadata$sample_id],
designMatrix)
identical(wildTypeDevStageFit, wildTypeDevStageFit_eset)
topTenGenes <- topTable(wildTypeDevStageFitEb)
topTenGenes
topGenes <- rownames(topTenGenes)[1:6]
topGenesExpressionData <- toLongerMeta(eset) %>%
filter(genotype == "WT") %>%
filter(gene %in% topGenes)
topGenesExpressionData # reminder of formatted expression data looks like - for easy graphing
topGenesExpressionData %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group=1), fun = mean, geom="line") +
facet_wrap(~gene)
plotGenes <- function(genes, exprset) {
expressionDataForGenes <- toLongerMeta(exprset) %>%
filter(gene %in% genes)
expressionDataForGenes %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group=1), fun = mean, geom="line") +
facet_wrap(~gene)
}
# verify that the function works - note that we have to subset the eset to just wild type samples
# unless we want to plot all samples
plotGenes(topGenes, eset[, eset$genotype == "WT"])
allGenes <- topTable(wildTypeDevStageFitEb, number = Inf) # show all genes in the list, rather than just the top 10
nrow(allGenes) # number of genes
# Let's look at the bottom 6 genes
boringGeneIndices <- seq(from = nrow(allGenes), to = nrow(allGenes) - 5)
boringGenes <- allGenes[boringGeneIndices,]
# print out the boring genes and their p-values
boringGenes
plotGenes(rownames(boringGenes), eset[, eset$genotype == "WT"])
# construct the contrast matrix
contrastMatrix <- makeContrasts(
p10vsp6 = dev_stageP10 - dev_stageP6,
fourweeksVsP10 = dev_stage4_weeks - dev_stageP10,
levels = designMatrix
)
contrastMatrix # take a look
# fit the contrast using the original fitted model
contrastFit <- contrasts.fit(wildTypeDevStageFit, contrastMatrix)
# apply eBayes() for moderated statistics
contrastFitEb <- eBayes(contrastFit)
contrastGenes <- topTable(contrastFitEb)
contrastGenes
# again plot the top 6 genes
plotGenes(rownames(contrastGenes)[1:6], eset[, eset$genotype == "WT"])
cutoff <- 1e-04
wtResCont <- decideTests(contrastFitEb, p.value = cutoff, method = "global")
summary(wtResCont)
hits1 <- wtResCont %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
filter(p10vsp6 < 0)
# these are the genes that declined from P6 to P10
hits1
# lets plot them
plotGenes(hits1$gene, eset[, eset$genotype == "WT"])
hits2 <- wtResCont %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
filter(fourweeksVsP10 < 0)
# these are the genes that declined from P10 to 4_weeks
hits2
# lets plot them
plotGenes(hits2$gene[1:4], eset[, eset$genotype == "WT"])
hits1$gene %>% intersect(hits2$gene)
# for simplification, let's look at only a two-by-two design, we'll filter for developmental stages E16 and 4_weeks
interactionSamples <- pData(eset) %>%
filter(dev_stage %in% c("E16", "4_weeks")) %>%
select(sample_id, dev_stage, genotype)
# IMPORTANT - you want to adjust factor levels here to eliminate stages P2, P6, and P10 from your design matrix
interactionSamples$dev_stage <- interactionSamples$dev_stage %>%
as.character() %>%
factor(levels = c("E16", "4_weeks"))
# reminder of what samples metadata look like - all samples
interactionSamples
# construct the design matrix to include all groups for genotype and developmental stages plus the interaction terms
interactionDesign <- model.matrix(~genotype*dev_stage, interactionSamples)
interactionDesign
# first fit the model
interactionFit <- lmFit(eset[, interactionSamples$sample_id],
interactionDesign) %>% eBayes()
# make DE calls for each coefficient
de_calls <- decideTests(interactionFit, method = "global", cutoff = 1e-6) %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
as_tibble()
# look for all genes with significant negative interaction effect and up regulation across developmental stages in KO (simple effect)
which.flip <- de_calls %>%
filter(dev_stage4_weeks > 0, `genotypeWT:dev_stage4_weeks` < 0) %>%
pull(gene)
# sort results by strength of interaction effect; pull out the genes with opposite
# developmental stage simple effect and interaction effect identified above
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
# lets try plotting 4 on this list
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:4])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
# first fit the model
interactionFit <- lmFit(eset[, interactionSamples$sample_id],
interactionDesign) %>% eBayes()
# make DE calls for each coefficient
de_calls <- decideTests(interactionFit, method = "global", cutoff = 1e-6) %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
as_tibble()
# genes without significant interaction effect
which.flip <- de_calls %>%
filter(
(dev_stage4_weeks > 0 & `genotypeWT:dev_stage4_weeks` > 0) |
(dev_stage4_weeks < 0 & `genotypeWT:dev_stage4_weeks` < 0) |
(dev_stage4_weeks == 0 & `genotypeWT:dev_stage4_weeks` == 0)
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:4])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
de_calls
de_calls %>%
filter(
#  (dev_stage4_weeks > 0 & `genotypeWT:dev_stage4_weeks` > 0) | # E14 WT and E14 KO both have positive DE compared to E16 KO
# (dev_stage4_weeks < 0 & `genotypeWT:dev_stage4_weeks` < 0) | # E14 WT and E14 KO both have negative DE compared to E16 KO
#  (dev_stage4_weeks == 0 & `genotypeWT:dev_stage4_weeks` == 0) |
(genotypeWT == `genotypeWT:dev_stage4_weeks`)# neither E15 WT nor E14 KO have DE compared to E16 KO
) %>% pull(gene)
de_calls %>%
filter(
#  (dev_stage4_weeks > 0 & `genotypeWT:dev_stage4_weeks` > 0) | # E14 WT and E14 KO both have positive DE compared to E16 KO
# (dev_stage4_weeks < 0 & `genotypeWT:dev_stage4_weeks` < 0) | # E14 WT and E14 KO both have negative DE compared to E16 KO
#  (dev_stage4_weeks == 0 & `genotypeWT:dev_stage4_weeks` == 0) |
(genotypeWT == `genotypeWT:dev_stage4_weeks`)#
# genes without significant interaction effect
# E14 will have the same relationship with E16 regardless of genotype
# alternatively, KO has the same relationship with WT regardless of dev stage
# so genotype_WT and genotypeWT_dev_stage_4weeks are in the same direction
which.flip <- de_calls %>%
de_calls %>%
filter(
#  (dev_stage4_weeks > 0 & `genotypeWT:dev_stage4_weeks` > 0) | # E14 WT and E14 KO both have positive DE compared to E16 KO
# (dev_stage4_weeks < 0 & `genotypeWT:dev_stage4_weeks` < 0) | # E14 WT and E14 KO both have negative DE compared to E16 KO
#  (dev_stage4_weeks == 0 & `genotypeWT:dev_stage4_weeks` == 0) |
(genotypeWT == `genotypeWT:dev_stage4_weeks`)# neither E15 WT nor E14 KO have DE compared to E16 KO
)
which.flip <- de_calls %>%
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`)
(genotypeWT == `genotypeWT:dev_stage4_weeks`)# neither E15 WT nor E14 KO have DE compared to E16 KO
) %>% pull(gene)
which.flip <- de_calls %>%
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(genotypeWT == `genotypeWT:dev_stage4_weeks`) | # E16 WT and E14 WT are DE in the same direction compared to baseline
) %>% pull(gene)
weeks are in the same direction
which.flip <- de_calls %>%
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(genotypeWT == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:4])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
hits
de_calls
interactionDesign
View(interactionDesign)
which.flip <- de_calls %>%
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(genotypeWT == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
hits
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:10])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(genotypeWT == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
)
WT and genotypeWT_dev_stage_4weeks are in the same direction
de_calls %>%
filter(
(dev_stage4_weeks == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(genotypeWT == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
)
de_calls
de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
)
de_calls
de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
)
de_calls %>%
filter(
sign(dev_stage4_weeks) == sign(`genotypeWT:dev_stage4_weeks`) |
sign(genotypeWT) == sign(`genotypeWT:dev_stage4_weeks`)
)
de_calls %>%
filter(
sign(dev_stage4_weeks) == sign(`genotypeWT:dev_stage4_weeks`) |
sign(genotypeWT) == sign(`genotypeWT:dev_stage4_weeks`)
) %>% pull(gene)
de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` != 0)
)
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` != 0)
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:10])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
which.flip
hits
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`)# & # E16 WT and E14 WT are DE in the same direction compared to baseline
# (`genotypeWT:dev_stage4_weeks` != 0) # some differential expression, either up or down logFC
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
hits
?decideTests
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`)# & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` == 0) # some differential expression, either up or down logFC
) %>% pull(gene)
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` == 0) # some differential expression, either up or down logFC
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
hits
# so genotype_WT and genotypeWT_dev_stage_4weeks are in the same direction
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` == 0) # some differential expression, either up or down logFC
) %>% pull(gene)
which.flip
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:10])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
de_calls <- decideTests(interactionFit, method = "global", cutoff = 1e-6) %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
as_tibble()
which.flip <- de_calls %>%
filter(
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) & # E16 WT and E14 WT are DE in the same direction compared to baseline
(`genotypeWT:dev_stage4_weeks` == 0) # some differential expression, either up or down logFC
) %>% pull(gene)
which.flip
de_calls
interactionFit <- lmFit(eset[, interactionSamples$sample_id],
interactionDesign) %>% eBayes()
de_calls <- decideTests(interactionFit, method = "global", cutoff = 1e-6) %>%
as.data.frame() %>%
rownames_to_column("gene") %>%
as_tibble()
de_calls
de_calls %>%
filter(
`genotypeWT:dev_stage4_weeks` != 0,
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
) %>% pull(gene)
which.flip <- de_calls %>%
filter(
`genotypeWT:dev_stage4_weeks` != 0, #  E14 WT is DE compared to baseline
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # E14 KO and E14 WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and E14 WT are DE in the same direction compared to baseline
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:10])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
expressionDataForHits
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
which.flip <- de_calls %>%
filter(
#`genotypeWT:dev_stage4_weeks` != 0, #  4weeks WT is DE compared to baseline
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # 4weeks KO and 4weeks WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and 4weeks WT are DE in the same direction compared to baseline
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:10])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
hits
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[10:15])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
which.flip <- de_calls %>%
filter(
`genotypeWT:dev_stage4_weeks` !=0,
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # 4weeks KO and 4weeks WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and 4weeks WT are DE in the same direction compared to baseline
) %>% pull(gene)
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[10:15])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
which.flip <- de_calls %>%
filter(
`genotypeWT:dev_stage4_weeks` <0,
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # 4weeks KO and 4weeks WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and 4weeks WT are DE in the same direction compared to baseline
) %>% pull(gene)
# genotypeWT:dev_stage4_weeks = 0 means that there is no differential expression between this group and the baseline
# if there is still differential expression between dev_stage4_weeks KO and baseline (E16 KO), that's still an interaction effect
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[10:15])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
which.flip <- de_calls %>%
filter(
`genotypeWT:dev_stage4_weeks` < 0,
(`dev_stage4_weeks` == `genotypeWT:dev_stage4_weeks`) | # 4weeks KO and 4weeks WT are DE in the same direction compared to baseline
(`genotypeWT` == `genotypeWT:dev_stage4_weeks`) # E16 WT and 4weeks WT are DE in the same direction compared to baseline
) %>% pull(gene)
# genotypeWT:dev_stage4_weeks = 0 means that there is no differential expression between this group and the baseline
# if there is still differential expression between dev_stage4_weeks KO and baseline (E16 KO), that's still an interaction effect
hits <- topTable(interactionFit, number = Inf,
coef = "genotypeWT:dev_stage4_weeks") %>%
rownames_to_column("gene") %>%
filter(gene %in% which.flip)
expressionDataForHits <- toLongerMeta(eset[, eset$sample_id %in% interactionSamples$sample_id]) %>%
filter(gene %in% hits$gene[1:4])
expressionDataForHits %>%
ggplot(aes(x = dev_stage, y = Expression, color = genotype)) +
geom_point(shape = 1, size = 2) +
stat_summary(aes(y = Expression, group = genotype), fun = mean, geom = "line") +
facet_wrap(~ gene)
